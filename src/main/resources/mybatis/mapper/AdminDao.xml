<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ezen.phonefly2.dao.IAdminDao">

<!-- ID를 기반으로 'worker' 테이블에서 비밀번호(pwd)를 가져오는 쿼리입니다. -->

<select id="getPwd" resultType="string">
    select pwd from worker where id=#{param1}
</select>

<!-- 특정 테이블에서 특정 필드에 키워드가 포함된 레코드의 개수를 가져오는 쿼리입니다.
     ${param1}은 테이블명, ${param2}는 필드명, #{param3}은 키워드를 나타냅니다. -->

<select id="getAllCount" resultType="_int">
    select count(*) from ${param1} where ${param2} like '%'||#{param3}||'%'
</select>

	
  
<!-- 'product' 테이블에서 이름에 특정 키워드가 포함된 레코드를 내림차순으로 가져와서 페이징 처리를 수행한 후 결과를 반환합니다.
     화면에 보여줄 제품 목록을 페이징하여 가져옵니다. -->

<select id="listProduct" resultType="com.ezen.phonefly2.dto.ProductVO">
    <!-- 가장 안쪽의 서브쿼리 p는 product 테이블에서 이름(name) 필드의 값에 특정 키워드가 포함된 레코드를 내림차순으로 가져옵니다.
         여기서 #{param2}는 쿼리 실행 시 전달된 매개변수의 값으로 대체됩니다. -->
    select * from (
        select * from (
            select rownum as rn, p.* from
            ((select * from product where name like '%'||#{param2}||'%' order by pseq desc) p) 
        ) where rn &gt;= #{param1.startNum}
    ) where rn &lt;= #{param1.endNum}
    <!-- 그 다음 서브쿼리는 첫 번째 서브쿼리의 결과에 대해 각 레코드마다 고유한 번호(rownum)를 부여하고, 해당 레코드 전체(p.*)를 가져옵니다. -->
    
    <!-- 가장 바깥의 쿼리는 두 번째 서브쿼리의 결과에 대해 페이징을 수행합니다.
         rn &gt;= #{param1.startNum}와 rn &lt;= #{param1.endNum} 조건을 이용해 원하는 범위의 레코드를 선택합니다.
         이때 #{param1.startNum}과 #{param1.endNum}은 매개변수로 전달된 페이징 정보를 나타냅니다. -->
</select>

	  
<!-- 'Member' 테이블에서 회원 목록을 페이징하여 가져오는 쿼리입니다. 서브쿼리문 내용은 위와 같으므로 중략합니다. -->

  <select id="listMember" resultType="com.ezen.phonefly2.dto.MemberVO">
     select * from (
     select * from (
         select rownum as rn, m.* from
         ((select * from Member where name like '%'||#{param2}||'%' ) m)
     ) where rn &gt; = #{param1.startNum}
     ) where rn &lt; = #{param1.endNum}
     
  </select>

<!-- 'Qna' 테이블에서 Qna 목록을 페이징하여 가져오는 쿼리입니다. 서브쿼리문 내용은 위와 같으므로 중략합니다. -->

  <select id="listQna" resultType="com.ezen.phonefly2.dto.QnaVO">
     select * from(
     select * from(
         select rownum as rn, q.*from
         ((select * from qna where subject like '%'||#{param2}||'%' order by qseq desc) q)
     ) where rn &gt; = #{param1.startNum}
     ) where rn &lt; = #{param1.endNum}
     
  </select>

<!-- 'Order' 테이블에서  주문목록을 페이징하여 가져오는 쿼리입니다. 서브쿼리문 내용은 위와 같으므로 중략합니다. -->
	
  <select id="listOrder" resultType="com.ezen.phonefly2.dto.OrderDetailVO">
        select * from(
        select * from(
         select rownum as rn, p.* from
         ((select * from ORDER_DETAIL_VIEW2 where id like '%'||#{param2}||'%' order by odseq desc) p)
         )where rn &gt;= #{param1.startNum}
         )where rn &lt;= #{param1.endNum} 
  </select> 

<!-- 'Notice' 테이블에서 공지사항 목록을 페이징하여 가져오는 쿼리입니다. 서브쿼리문 내용은 위와 같으므로 중략합니다. -->	
	
  <select id="listNotice" resultType="com.ezen.phonefly2.dto.NoticeVO">
    SELECT *
    FROM (
        SELECT rownum as rn, n.*
        FROM (
            SELECT *
            FROM notice
            WHERE subject LIKE '%' || #{param2} || '%'
            ORDER BY nseq DESC
        ) n
    ) 
    WHERE rn &gt;= #{param1.startNum} AND rn &lt;= #{param1.endNum}
	</select>

<!-- 'Event' 테이블에서 이벤트 목록을 페이징하여 가져오는 쿼리입니다. 서브쿼리문 내용은 위와 같으므로 중략합니다. -->
	
	<select id="listEvent" resultType="com.ezen.phonefly2.dto.EventVO">
	    SELECT *
	    FROM (
	        SELECT rownum as rn, e.*
	        FROM (
	            SELECT *
	            FROM event
	            WHERE subject LIKE '%' || #{param2} || '%'
	            ORDER BY eseq DESC
	        ) e
	    ) 
	    WHERE rn &gt;= #{param1.startNum} AND rn &lt;= #{param1.endNum}
	</select>
	
	<!-- 'banner' 테이블에서 모든 레코드를 가져와서 'order_seq' 필드를 기준으로 오름차순 정렬한 후 결과를 반환하는 쿼리입니다. -->
	
	<select id="getBannerList" resultType="com.ezen.phonefly2.dto.BannerVO">
	    select * from banner order by order_seq
	</select>

	<!-- 'banner' 테이블에서 특정 'bseq' 값을 기반으로 레코드를 선택하여 가져오는 쿼리입니다. -->
	<!-- 이 쿼리는 'getBanner' ID로 정의되었으며, '#{param1}'은 매개변수로 전달된 'bseq' 값을 대체합니다. -->	
	
	<select id="getBanner" resultType="com.ezen.phonefly2.dto.BannerVO">
	    select * from banner where bseq=#{param1}
	</select>

		
	<!-- 'banner' 테이블에 새로운 레코드를 삽입하는 쿼리입니다. -->
	<!-- 'banner_seq.nextVal'은 시퀀스를 통해 자동으로 새로운 값을 생성합니다. -->
	
	<insert id="insertBanner" parameterType="com.ezen.phonefly2.dto.BannerVO">
	    insert into banner(bseq, subject, order_seq, useyn, video, btitle, btext, top, left )
	    values( banner_seq.nextVal, #{subject}, #{order_seq}, #{useyn}, #{video}, #{btitle}, #{btext}, #{top}, #{left} )
	</insert>
	
	<!-- 'banner' 테이블에서 특정 레코드의 'order_seq'와 'useyn' 값을 수정하는 쿼리입니다. -->
	
	<update id="updateSeq" >
	    update banner set order_seq=#{param1}, useyn=#{param2} where bseq=#{param3}
	</update>
	
	<!-- 'banner' 테이블에서 특정 레코드를 삭제하는 쿼리입니다. -->
	<!-- 'deleteBanner' ID로 정의되었으며, 매개변수로 전달된 'bseq' 값을 사용하여 삭제 작업을 수행합니다. -->
	
	<delete id="deleteBanner" >
	    delete from banner where bseq=#{param1}
	</delete>
	
	<!-- 'banner' 테이블에서 특정 레코드를 수정하는 쿼리입니다. -->
	<!--  'updateBanner' ID로 정의되었으며, 매개변수의 속성을 사용하여 수정 작업을 수행합니다. -->
	<!-- 'bseq' 값으로 특정 레코드를 식별하고, 다른 속성들을 업데이트합니다. -->
	
	<update id="updateBanner" parameterType="com.ezen.phonefly2.dto.BannerVO" >
	    update banner set subject=#{subject}, order_seq=#{order_seq}, useyn=#{useyn},
	    video=#{video}, btitle=#{btitle}, btext=#{btext}, top=#{top}, left=#{left} where bseq=#{bseq}
	</update>

	
	<select id="getMember"  resultType="com.ezen.phonefly2.dto.MemberVO">
		select * from member where mseq=#{param1}
	</select>
	
	<insert id="insertProduct" parameterType="com.ezen.phonefly2.dto.ProductVO" useGeneratedKeys="true" keyColumn="pseq" keyProperty="pseq">
		insert into product ( pseq, name, price1, price2, price3, content, mfc, useyn, bestyn, eventyn) 
		        values( pseq.nextVal, #{name}, #{price1}, #{price2}, 
		        #{price3}, #{content}, #{mfc}, #{useyn}, #{bestyn}, #{eventyn} )
	</insert>
	
	<insert id="insertColor" parameterType="com.ezen.phonefly2.dto.ColorVO">
		insert into color ( cseq, pseq, name, ccode, image ) 
		values( cseq.nextVal, #{pseq}, #{name}, #{ccode}, #{image})
	</insert>

	<update id="qnaReply" >
		update qna set reply=#{param2}, rep='2' where qseq=#{param1}
	</update>

	
	<select id="getAllCountColor" resultType="_int">
     select count(*) from ${param1} where ${param2} like '%'||#{param3}||'%' and pseq=#{param4}
 	</select>
 	
	<select id="listColor" resultType="com.ezen.phonefly2.dto.ColorVO">
	    select*from color where pseq=#{param1}
	</select>
	
	<delete id="deleteProduct" >
		delete from product where pseq=#{param1}
	</delete>
	
	<update id="updateProduct" parameterType="com.ezen.phonefly2.dto.ProductVO" >
		update product set name=#{name}, price1=#{price1}, price2=#{price2}, price3=#{price3},
		content=#{content}, mfc=#{mfc}, useyn=#{useyn}, bestyn=#{bestyn}, eventyn=#{eventyn}
		where pseq=#{pseq}
	</update>
	
	<select id="getColor" resultType="com.ezen.phonefly2.dto.ColorVO">
		select*from color where cseq = #{param1}
	</select>
	
	<update id="updateColor" parameterType="com.ezen.phonefly2.dto.ColorVO">
		update color set name=#{name}, ccode=#{ccode}, image=#{image} where cseq=#{cseq}
	</update>
	
	<delete id="deleteColor" >
		delete from color where cseq=#{param1}
	</delete>
</mapper>
